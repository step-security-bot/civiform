name: tests

on:
  workflow_call:

  # Setting this enables manually triggering workflow in the GitHub UI
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch: {}

permissions: read-all

jobs:
  run_junit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
      - name: Build test container
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -t civiform-dev --cache-from docker.io/civiform/civiform-dev:latest ./
      - name: Build dev-oidc
        env:
          DOCKER_BUILDKIT: 1
        run: bin/build-dev-oidc
      - name: Run tests
        run: bin/run-test-ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # v3.1.1
        with:
          file: server/code-coverage/report/jacoco.xml
          verbose: true
          # We're getting intermittent issues with codecov trying to upload lately
          # disabling it from failing the entire pipeline for now.
          fail_ci_if_error: false

  run_typescript_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
      - name: Build test container
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -t civiform-dev --cache-from docker.io/civiform/civiform-dev:latest ./
      - name: Run tests
        run: bin/run-ts-tests

  run_browser_tests_aws:
    strategy:
      fail-fast: false
      matrix:
        batch_number: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
      - name: Build test app container
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -t civiform-dev --cache-from docker.io/civiform/civiform-dev:latest ./
      - name: Build browser testing container
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-browser-tests
      - name: Build dev-oidc
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-dev-oidc
      - name: Build localstack
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-localstack-env
      - name: Bring up test env with Localstack
        run: bin/run-browser-test-env --aws --ci
      - name: Run browser tests with Localstack
        run: bin/run-browser-tests-ci-batch ${{ matrix.batch_number }}
      - name: Verify no new image snapshots added
        # jest-image-snapshots automatically adds snapshot if it's missing.
        # Use git diff to fail if we detect new images.
        run: git add browser-test/image_snapshots ; git diff --compact-summary --exit-code HEAD
      - name: Upload image diff outputs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: image diff output directory
          path: browser-test/diff_output
        if: failure()
      - name: Upload test videos on failure
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: tests videos
          path: browser-test/tmp
        if: failure()
      - name: Print logs on failure
        if: failure()
        run: cat .dockerlogs

  run_browser_tests_azure:
    strategy:
      fail-fast: false
      matrix:
        batch_number: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
      - name: Build test app container
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -t civiform-dev --cache-from docker.io/civiform/civiform-dev:latest ./
      - name: Build browser testing container
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-browser-tests
      - name: Build dev-oidc
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-dev-oidc
      - name: Build localstack
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
        run: bin/build-localstack-env
      - name: Bring up test env with Azurite
        run: bin/run-browser-test-env --azure --ci
      - name: Run browser tests with Azurite
        run: bin/run-browser-tests-ci-batch ${{ matrix.batch_number }}
      - name: Upload image diff outputs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: image diff output directory
          path: browser-test/diff_output
        if: failure()
      - name: Upload test videos on failure
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: tests videos
          path: browser-test/tmp
        if: failure()
      - name: Print logs on failure
        if: failure()
        run: cat .dockerlogs

  test_prod:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: check out ${{ env.GITHUB_REF }}
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
      - name: Build prod container
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -f prod.Dockerfile -t civiform:prod --cache-from docker.io/civiform/civiform:latest ./
      - name: Build the stack
        env:
          SECRET_KEY: notarealsecret
        run: docker compose -f test-support/prod-simulator-compose.yml up -d
      - name: Test
        # Confirm that we get a response on port 9000.
        run: while ! docker run --network host appropriate/curl -v -s --retry-max-time 180 --retry-connrefused http://localhost:9000/ ; do sleep 5; done
        timeout-minutes: 3
